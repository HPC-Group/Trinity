/*
  Configuration defines for installed libtiff.
  This file maintained for backward compatibility. Do not use definitions
  from this file in your programs.
  Generated by cmake from a hard-coded template.
*/

#ifdef _MSC_VER
# pragma once
#endif

#ifndef _TIFFCONF_
#define _TIFFCONF_

/* Signed 16-bit type */
#cmakedefine TIFF_INT16_T @TIFF_INT16_T@

/* Signed 32-bit type */
#cmakedefine TIFF_INT32_T @TIFF_INT32_T@

/* Signed 64-bit type */
#cmakedefine TIFF_INT64_T @TIFF_INT64_T@

/* Signed 8-bit type */
#cmakedefine TIFF_INT8_T @TIFF_INT8_T@

/* Unsigned 16-bit type */
#cmakedefine TIFF_UINT16_T @TIFF_UINT16_T@

/* Unsigned 32-bit type */
#cmakedefine TIFF_UINT32_T @TIFF_UINT32_T@

/* Unsigned 64-bit type */
#cmakedefine TIFF_UINT64_T @TIFF_UINT64_T@

/* Unsigned 8-bit type */
#cmakedefine TIFF_UINT8_T @TIFF_UINT8_T@

/* Signed size type */
#cmakedefine TIFF_SSIZE_T @TIFF_SSIZE_T@

/* Pointer difference type */
#cmakedefine TIFF_PTRDIFF_T @TIFF_PTRDIFF_T@

/* Define to 1 if the system has the type `int16'. */
#cmakedefine HAVE_INT16 1

/* Define to 1 if the system has the type `int32'. */
#cmakedefine HAVE_INT32 1

/* Define to 1 if the system has the type `int8'. */
#cmakedefine HAVE_INT8 1

/* Compatibility stuff. */

/* Define as 0 or 1 according to the floating point format suported by the
   machine */
#cmakedefine01 HAVE_IEEEFP

/* Set the native cpu bit order (FILLORDER_LSB2MSB or FILLORDER_MSB2LSB) */
#cmakedefine HOST_FILLORDER @HOST_FILLORDER@

/* Native cpu byte order: 1 if big-endian (Motorola) or 0 if little-endian
   (Intel) */
#cmakedefine01 HOST_BIGENDIAN

/* Support CCITT Group 3 & 4 algorithms */
#cmakedefine CCITT_SUPPORT 1

/* Support JPEG compression (requires IJG JPEG library) */
#cmakedefine JPEG_SUPPORT 1

/* Support JBIG compression (requires JBIG-KIT library) */
#cmakedefine JBIG_SUPPORT 1

/* Support LogLuv high dynamic range encoding */
#cmakedefine LOGLUV_SUPPORT 1

/* Support LZW algorithm */
#cmakedefine LZW_SUPPORT 1

/* Support NeXT 2-bit RLE algorithm */
#cmakedefine NEXT_SUPPORT 1

/* Support Old JPEG compresson (read contrib/ojpeg/README first! Compilation
   fails with unpatched IJG JPEG library) */
#cmakedefine OJPEG_SUPPORT 1

/* Support Macintosh PackBits algorithm */
#cmakedefine PACKBITS_SUPPORT 1

/* Support Pixar log-format algorithm (requires Zlib) */
#cmakedefine PIXARLOG_SUPPORT 1

/* Support ThunderScan 4-bit RLE algorithm */
#cmakedefine THUNDER_SUPPORT 1

/* Support Deflate compression */
#cmakedefine ZIP_SUPPORT 1

/* Support strip chopping (whether or not to convert single-strip uncompressed
   images to mutiple strips of ~8Kb to reduce memory usage) */
#cmakedefine STRIPCHOP_DEFAULT @STRIPCHOP_DEFAULT@

/* Enable SubIFD tag (330) support */
#cmakedefine SUBIFD_SUPPORT 1

/* Treat extra sample as alpha (default enabled). The RGBA interface will
   treat a fourth sample with no EXTRASAMPLE_ value as being ASSOCALPHA. Many
   packages produce RGBA files but don't mark the alpha properly. */
#cmakedefine DEFAULT_EXTRASAMPLE_AS_ALPHA 1

/* Pick up YCbCr subsampling info from the JPEG data stream to support files
   lacking the tag (default enabled). */
#cmakedefine CHECK_JPEG_YCBCR_SUBSAMPLING 1

/* Support MS MDI magic number files as TIFF */
#cmakedefine MDI_SUPPORT 1

/*
 * Feature support definitions.
 * XXX: These macros are obsoleted. Don't use them in your apps!
 * Macros stays here for backward compatibility and should be always defined.
 */
#define COLORIMETRY_SUPPORT
#define YCBCR_SUPPORT
#define CMYK_SUPPORT
#define ICC_SUPPORT
#define PHOTOSHOP_SUPPORT
#define IPTC_SUPPORT

/* Public symbols visibility. See: http://gcc.gnu.org/wiki/Visibility */
#if defined(_WIN32) || defined(__CYGWIN__)
  #define TIFF_HELPER_DLL_IMPORT __declspec(dllimport)
  #define TIFF_HELPER_DLL_EXPORT __declspec(dllexport)
  #define TIFF_HELPER_DLL_LOCAL
#else
  #if __GNUC__ >= 4
    #define TIFF_HELPER_DLL_IMPORT __attribute__ ((visibility ("default"))))
    #define TIFF_HELPER_DLL_EXPORT __attribute__ ((visibility ("default")))
    #define TIFF_HELPER_DLL_LOCAL  __attribute__ ((visibility ("hidden")))
  #else
    #define TIFF_HELPER_DLL_IMPORT __attribute__ ((visibility ("default"))))
    #define TIFF_HELPER_DLL_EXPORT __attribute__ ((visibility ("default")))
    #define TIFF_HELPER_DLL_LOCAL  __attribute__ ((visibility ("hidden")))
  #endif
#endif

/* If building or using tiff as a DLL, define TIFF_DLL.
 * This is not mandatory, but it offers a little performance increase.
 */
#if defined(TIFF_DLL)
  #if defined(TIFF_INTERNAL)
    #define TIFF_API TIFF_HELPER_DLL_EXPORT
  #else
    #define TIFF_API TIFF_HELPER_DLL_IMPORT
  #endif /* TIFF_INTERNAL */
  #define TIFF_LOCAL TIFF_HELPER_DLL_LOCAL
#else
  #define TIFF_API
  #define TIFF_LOCAL
#endif /* TIFF_DLL */

#endif /* _TIFFCONF_ */

INCLUDE(PlatformSpecific)
#INCLUDE(CreateSourceGroups)

add_definitions(-DPUSHFRAMEWORK_EXPORTS="${PUSHFRAMEWORK_EXPORTS}")

IF(WIN32)
	FILE(GLOB PUSH_FRAMEWORK_HEADER ${CMAKE_CURRENT_LIST_DIR}/private/win/*.h ${CMAKE_CURRENT_LIST_DIR}/include/*.h ${CMAKE_CURRENT_LIST_DIR}/private/*.h)
	FILE(GLOB PUSH_FRAMEWORK_SOURCE ${CMAKE_CURRENT_LIST_DIR}/private/win/*.cpp ${CMAKE_CURRENT_LIST_DIR}/private/*.cpp)
ELSEIF(UNIX)
	FILE(GLOB_RECURSE PUSH_FRAMEWORK_HEADER ${CMAKE_CURRENT_LIST_DIR}/private/linux/*.h ${CMAKE_CURRENT_LIST_DIR}/include/*.h ${CMAKE_CURRENT_LIST_DIR}/private/*.h)
	FILE(GLOB_RECURSE PUSH_FRAMEWORK_SOURCE ${CMAKE_CURRENT_LIST_DIR}/private/linux/*.cpp ${CMAKE_CURRENT_LIST_DIR}/private/*.cpp)
ENDIF(WIN32)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/include)

#CreateSourceGroups("${PUSH_FRAMEWORK_SOURCE}" ${CMAKE_CURRENT_LIST_DIR}/private)
#CreateSourceGroups("${PUSH_FRAMEWORK_HEADER}" ${CMAKE_CURRENT_LIST_DIR}/include)

ADD_LIBRARY(pushframework SHARED ${PUSH_FRAMEWORK_SOURCE} ${PUSH_FRAMEWORK_HEADER})

target_include_directories (pushframework PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/..)